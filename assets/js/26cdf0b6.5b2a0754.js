"use strict";(self.webpackChunkcartesi_boardgame=self.webpackChunkcartesi_boardgame||[]).push([[7016],{2550:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Cartesi Boardgame","href":"/documentation-boardgame/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Quick Start Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/documentation-boardgame/docs/quick-start/instalation","docId":"quick-start/instalation","unlisted":false},{"type":"link","label":"Run a Pre-Built Example","href":"/documentation-boardgame/docs/quick-start/run-example","docId":"quick-start/run-example","unlisted":false},{"type":"link","label":"Build Your Game from Template","href":"/documentation-boardgame/docs/quick-start/build-from-template","docId":"quick-start/build-from-template","unlisted":false}],"href":"/documentation-boardgame/docs/category/quick-start-guide"},{"type":"category","label":"Core Concepts","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Game Client Logic","href":"/documentation-boardgame/docs/core-concepts/architecture/game-client-logic","docId":"core-concepts/architecture/game-client-logic","unlisted":false},{"type":"link","label":"Dapp Transport","href":"/documentation-boardgame/docs/core-concepts/architecture/dapp-transport","docId":"core-concepts/architecture/dapp-transport","unlisted":false},{"type":"link","label":"Backend Cartesify","href":"/documentation-boardgame/docs/core-concepts/architecture/backend-cartesify","docId":"core-concepts/architecture/backend-cartesify","unlisted":false},{"type":"link","label":"DRAND","href":"/documentation-boardgame/docs/core-concepts/architecture/drand","docId":"core-concepts/architecture/drand","unlisted":false},{"type":"link","label":"Lobby","href":"/documentation-boardgame/docs/core-concepts/architecture/lobby","docId":"core-concepts/architecture/lobby","unlisted":false},{"type":"link","label":"Storage","href":"/documentation-boardgame/docs/core-concepts/architecture/storage","docId":"core-concepts/architecture/storage","unlisted":false}],"href":"/documentation-boardgame/docs/category/architecture"},{"type":"link","label":"Cartesi Integration","href":"/documentation-boardgame/docs/core-concepts/cartesi-integration","docId":"core-concepts/cartesi-integration","unlisted":false}],"href":"/documentation-boardgame/docs/category/core-concepts"},{"type":"category","label":"Game Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Development Environment","href":"/documentation-boardgame/docs/game-development/enviroment","docId":"game-development/enviroment","unlisted":false}],"href":"/documentation-boardgame/docs/category/game-development"},{"type":"category","label":"Website","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"cartesi-boardgame","href":"/documentation-boardgame/docs/api/globals","docId":"api/globals","unlisted":false}],"href":"/documentation-boardgame/docs/api/"}]},"docs":{"api/globals":{"id":"api/globals","title":"cartesi-boardgame","description":"","sidebar":"tutorialSidebar"},"api/index":{"id":"api/index","title":"Website","description":"This website is built using Docusaurus, a modern static website generator.","sidebar":"tutorialSidebar"},"core-concepts/architecture/backend-cartesify":{"id":"core-concepts/architecture/backend-cartesify","title":"Backend Cartesify","description":"How to configure and use the backend with Cartesify for integration with the CVM.","sidebar":"tutorialSidebar"},"core-concepts/architecture/dapp-transport":{"id":"core-concepts/architecture/dapp-transport","title":"Dapp Transport","description":"The Dapp Transport module is a key component of the Cartesi Boardgame framework, facilitating communication between the frontend, backend, and Cartesi Virtual Machine (CVM). This transport layer replaces traditional Web2 communication methods, enabling blockchain-based validation of game moves for secure and transparent outcomes.","sidebar":"tutorialSidebar"},"core-concepts/architecture/drand":{"id":"core-concepts/architecture/drand","title":"DRAND","description":"Implementation of reliable randomness using Cartesi DRAND.","sidebar":"tutorialSidebar"},"core-concepts/architecture/game-client-logic":{"id":"core-concepts/architecture/game-client-logic","title":"Game Client Logic","description":"Details on game logic management on the client side, handling of G and ctx states.","sidebar":"tutorialSidebar"},"core-concepts/architecture/lobby":{"id":"core-concepts/architecture/lobby","title":"Lobby","description":"Management of game sessions and lobby functionalities.","sidebar":"tutorialSidebar"},"core-concepts/architecture/storage":{"id":"core-concepts/architecture/storage","title":"Storage","description":"The Cartesi Boardgame Framework provides flexible options for backend storage, allowing developers to choose the best solution for their game\u2019s needs. With the integration of SQLite, the framework now supports multiple storage methods, including in-memory, FlatFile, and SQLite databases. This flexibility enhances game data management by offering both lightweight and more advanced, persistent storage solutions.","sidebar":"tutorialSidebar"},"core-concepts/cartesi-integration":{"id":"core-concepts/cartesi-integration","title":"Cartesi Integration","description":"Boardgame Example","sidebar":"tutorialSidebar"},"game-development/enviroment":{"id":"game-development/enviroment","title":"Development Environment","description":"This document outlines the setup and execution process for the T&D\u2019s Boardgame Framework development environment. It\'s recommended to use separate consoles for each repository: backend, frontend, and the T&D\u2019s Boardgame Framework library.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Cartesi Boardgame","description":"Introduction to Cartesi Boardgame Library","sidebar":"tutorialSidebar"},"quick-start/build-from-template":{"id":"quick-start/build-from-template","title":"Build Your Game from Template","description":"Como crear tu propio juego a partir de un template.","sidebar":"tutorialSidebar"},"quick-start/instalation":{"id":"quick-start/instalation","title":"Installation","description":"Installing Cartesi Boardgame Libary","sidebar":"tutorialSidebar"},"quick-start/run-example":{"id":"quick-start/run-example","title":"Run a Pre-Built Example","description":"To quickly get started with a pre-built example, such as the tic-tac-toe game, follow these steps to download the code from the Playground and run it on your local machine.","sidebar":"tutorialSidebar"}}}}')}}]);