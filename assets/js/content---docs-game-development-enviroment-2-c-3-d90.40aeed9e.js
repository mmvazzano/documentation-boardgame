"use strict";(self.webpackChunkcartesi_boardgame=self.webpackChunkcartesi_boardgame||[]).push([[7886],{5891:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var t=r(4848),o=r(8453);const s={sidebar_position:1},i="Development Environment",l={id:"game-development/enviroment",title:"Development Environment",description:"This document outlines the setup and execution process for the T&D\u2019s Boardgame Framework development environment. It's recommended to use separate consoles for each repository: backend, frontend, and the T&D\u2019s Boardgame Framework library.",source:"@site/docs/game-development/enviroment.md",sourceDirName:"game-development",slug:"/game-development/enviroment",permalink:"/docs/game-development/enviroment",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/game-development/enviroment.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Game Development",permalink:"/docs/category/game-development"},next:{title:"Website",permalink:"/docs/api/"}},d={},a=[];function c(e){const n={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"development-environment",children:"Development Environment"})}),"\n",(0,t.jsx)(n.p,{children:"This document outlines the setup and execution process for the T&D\u2019s Boardgame Framework development environment. It's recommended to use separate consoles for each repository: backend, frontend, and the T&D\u2019s Boardgame Framework library.\nTo test T&D\u2019s Boardgame Framework, the path examples/typescript is used to run a frontend for testing pourposes. It employs this library to run Boardgame-io games using Cartesi technology."}),"\n",(0,t.jsx)(n.p,{children:"Local Library Configuration:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In the T&D\u2019s Boardgame Framework root directory:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"npm i"})," to install dependencies."]}),"\n",(0,t.jsxs)(n.li,{children:["Execute ",(0,t.jsx)(n.code,{children:"yarn proxydirs"})," or ",(0,t.jsx)(n.code,{children:"npm run proxydirs"})," to recognize multiplayer, internal, and other folders."]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn build"})," or ",(0,t.jsx)(n.code,{children:"npm run build"})," to compile the application."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"yarn link"})," to obtain a link that will connect this repository with the backend and frontend."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In the folder examples/typescript of T&D\u2019s Boardgame Framework:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn install"})," to install dependencies."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"yarn link"})," followed by the result obtained in the previous T&D\u2019s Boardgame Framework step."]}),"\n",(0,t.jsxs)(n.li,{children:["Start the application with ",(0,t.jsx)(n.code,{children:"yarn start"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In your backend (to run NONODO, the local Cartesi node for development and testing):"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Install NONODO globally with ",(0,t.jsx)(n.code,{children:"npm i -g nonodo"})," if not already installed."]}),"\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"nonodo"}),". Note: Ensure Foundry is installed for NONODO to function correctly."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"In your backend:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Run ",(0,t.jsx)(n.code,{children:"yarn install"})," to install dependencies."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"yarn link"})," followed by the result obtained in the T&D\u2019s Boardgame Framework step."]}),"\n",(0,t.jsxs)(n.li,{children:["Start the application with ",(0,t.jsx)(n.code,{children:"yarn start"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": If you want to run the application ",(0,t.jsx)(n.strong,{children:"without using NONODO"}),", you must run the ",(0,t.jsx)(n.strong,{children:"CVM (Cartesi Virtual Machine)"})," with ",(0,t.jsx)(n.code,{children:"cartesi build"})," and then ",(0,t.jsx)(n.code,{children:"cartesi run"}),", it's not necessary to do ",(0,t.jsx)(n.code,{children:"yarn start"})," in the backend or link the repositories. Simply running ",(0,t.jsx)(n.code,{children:"yarn install"})," in the backend, then ",(0,t.jsx)(n.code,{children:"cartesi build"})," and ",(0,t.jsx)(n.code,{children:"cartesi run"})," will set up all the necessary structure."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(6540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);